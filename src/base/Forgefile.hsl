#
#                          Copyright (C) 2018 by Rafael Santiago
#
# Use of this source code is governed by GPL-v2 license that can
# be found in the COPYING file.
#
#

include ../forgeutils/toolsets.hsl

local var src type list;
local var inc type list;
local var cflags type list;
local var lib type list;
local var ldflags type list;
local var deps type string;
local var curr_tool type string;

libbbase.preloading() {
    $curr_tool = get_lib_toolset();
}

project libbbase : toolset $curr_tool : dependencies $deps : $src, $inc, $cflags, $lib, $ldflags, "libbbase.a";

libbbase.prologue() {
    if (build("libkryptos") != 0 || build("libcutest") != 0 || build("libaccacia") != 0) {
        hefesto.project.abort(1);
    }

    $inc = hefesto.sys.get_option("includes");
    $cflags = hefesto.sys.get_option("cflags");
    $lib = hefesto.sys.get_option("libraries");
    $ldflags = hefesto.sys.get_option("ldflags");

    setup_ciphering_schemes($cflags);

    if (hefesto.sys.os_name() == "netbsd" || hefesto.sys.os_name() == "sunos") {
        $cflags.add_item("-std=c99");
    }

    var dirlist type list;

    $dirlist.add_item("../keychain");
    $dirlist.add_item("../keychain/cipher");
    $dirlist.add_item("../keychain/encoder");
    $dirlist.add_item("../keychain/steganography");
    $dirlist.add_item("../keychain/kdf");
    $dirlist.add_item("../ctx");
    $dirlist.add_item("../kbd");
    $dirlist.add_item("../util");
    $dirlist.add_item("../libc");

    $src = get_codes($dirlist, $deps);
}

libbbase.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        if (has_bad_funcs(hefesto.sys.lines_from_file("../BAD_FUNCS", ".*"), $src, $inc, $cflags)) {
            hefesto.project.abort(1);
        }
    }
}
