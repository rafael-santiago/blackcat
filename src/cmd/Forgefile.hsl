#
#                          Copyright (C) 2018 by Rafael Santiago
#
# Use of this source code is governed by GPL-v2 license that can
# be found in the COPYING file.
#
#

include ~/toolsets/common/utils/lang/c/dependency_scanner.hsl
include ../forgeutils/toolsets.hsl

local var curr_toolset type string;

local var src type list;
local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;

local var deps type string;

local var appname type string;

project blackcat-cmd : toolset $curr_toolset : dependencies $deps : $src, $includes, $cflags, $libraries, $ldflags, $appname;

blackcat-cmd.preloading() {
    $curr_toolset = get_app_toolset();
}

blackcat-cmd.prologue() {
    var code_paths type list;

    # INFO(Rafael): All relevant sub-paths with code to scan and compile.

    $code_paths.add_item(".");
    $src = get_codes($code_paths, $deps);

    $includes = hefesto.sys.get_option("includes");
    $cflags = hefesto.sys.get_option("cflags");
    $libraries = hefesto.sys.get_option("libraries");
    $ldflags = hefesto.sys.get_option("ldflags");

    if (hefesto.sys.os_name() == "windows") {
        $ldflags.del_item("-lbcnet");
    }

    setup_ciphering_schemes($cflags);

    if (hefesto.sys.os_name() == "netbsd") {
        $cflags.add_item("-std=c99");
        $ldflags.add_item("-lprop");
    } else if (hefesto.sys.os_name() == "sunos") {
        $cflags.add_item("-std=c99");
    }

    if (hefesto.sys.os_name() != "windows") {
        if (isdir("/usr/local/include")) {
            $includes.add_item("/usr/local/include");
        }

        if (isdir("/usr/lib")) {
            $libraries.add_item("/usr/lib");
        }

        if (isdir("/usr/local/lib")) {
            $libraries.add_item("/usr/local/lib");
        }
    }

    if (build("libkryptos") != 0) {
        hefesto.project.abort(1);
    }

    if (build("libaccacia") != 0) {
        hefesto.project.abort(1);
    }

    $appname = get_appname();
}

blackcat-cmd.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        if (has_bad_funcs(hefesto.sys.lines_from_file("../BAD_FUNCS", ".*"), $src, $includes, $cflags)) {
            hefesto.project.abort(1);
        }
    }
}

local function get_appname() : result type string {
    var appname type string;

    $appname = "blackcat";

    if (hefesto.sys.os_name() == "windows") {
        $appname = $appname + ".exe";
    }

    result $appname;
}
